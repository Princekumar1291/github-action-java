name: Build & Push Docker Image

on:
  push:
    branches: [ main, prince ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Git
      run: |
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"

    - name: Get latest tag and bump version
      id: version
      run: |
        latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "v0.0.0")
        version=${latest_tag#v}
        IFS='.' read -r major minor patch <<< "$version"

        patch=$((patch + 1))
        if [ "$patch" -ge 10 ]; then
          patch=0
          minor=$((minor + 1))
        fi

        if [ "$minor" -ge 10 ]; then
          minor=0
          major=$((major + 1))
        fi

        new_version="v$major.$minor.$patch"
        echo "tag=$new_version" >> $GITHUB_OUTPUT

    - name: Create new Git tag
      run: |
        git tag ${{ steps.version.outputs.tag }}
        git push origin ${{ steps.version.outputs.tag }}

    - name: Log in to GitHub Container Registry (GHCR)
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.TOKEN_GITHUB }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          ghcr.io/${{ github.actor }}/github-action-java:latest
          ghcr.io/${{ github.actor }}/github-action-java:${{ steps.version.outputs.tag }}
        cache-from: type=registry,ref=ghcr.io/${{ github.actor }}/github-action-java:cache
        cache-to: type=registry,ref=ghcr.io/${{ github.actor }}/github-action-java:cache,mode=max

    - name: Output image tags
      run: |
        echo "Image pushed with tags:"
        echo "- latest"
        echo "- ${{ steps.version.outputs.tag }}"
        echo "- ${{ github.sha }}"

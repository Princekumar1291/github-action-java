name: Build & Push Docker Image

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main, prince ]
    # paths:
    #   - 'src/**'
    #   - 'pom.xml'
    #   - 'Dockerfile'

  # schedule:
  #   - cron: '0 0 * * *' 

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write 

    steps:
      
    - name: Checkout repository
      uses: actions/checkout@v3 

    - name: Log in to GitHub Container Registry (GHCR)
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.TOKEN_GITHUB }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        platforms: linux/amd64,linux/arm64
        tags: "ghcr.io/${{github.actor}}/github-action-java:${{github.sha}}"
        # cache-from: type=gha
        # cache-to: type=gha,mode=max
        cache-from: type=registry,ref=ghcr.io/${{github.actor}}/github-action-java:cache
        cache-to: type=registry,ref=ghcr.io/${{github.actor}}/github-action-java:cache,mode=max

    - name: Output image URL
      run: echo "Image pushed to ghcr.io/${{ github.repository }}:latest" 



    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to EC2 via SSH
      run: |
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          docker stop myapp || true
          docker rm myapp || true
          docker pull docker pull ghcr.io/praveenprabhut/devops-java-app:latest
          docker run -d --name myapp -p 80:8080 ghcr.io/praveenprabhut/devops-java-app:latest
        EOF
